METHODS:
1. int getStreakGoal()-
    Cafe Java wants to implement a reward system for customers who always
    buy more drinks than they did the week before. To calculate how many
    drinks they need after 10 weeks, write a method that sums together
    every consecutive integer from 1 to 10 and returns the sum.
    In other words, add 1 + 2 + 3... and so on up to 10 and return the result.

    [Test your code before moving on! Don't forget to make an instance of your
    CafeUtil class to use in the test file. The number printed should be 55.]

    NINJA BONUS: Add a parameter, numWeeks so that an admin can change the number
    from 10 to whatever they want.

2. double getOrderTotal(double[]prices)-
    Given an array of item prices from an order, sum all of the prices in the
    array and return the total. Don't forget to test your code! Find the lines
    of test code for this method in TestCafe and uncomment it before you compile
    and run.

3. void displayMeny(ArrayList<String>menuItems)-
    Given an ArrayList of menu items(strings), print out each index and menu item.

    [Sample output given an ArrayList with the items "drip coffee", "cappuccino", "latte",
    and "mocha":
        0 drip coffee
        1 cappuccino
        2 latte
        3 mocha]

    Re-cap of ArrayList Syntax: String name = myArray.get(0); => to access an element in an
    ArrayList using an index

4. addCustomer(ArrayList<String>customers)-
    Inside this method:

        1) Print this string to the console- "Please enter your name:"

        2) Then add this line of code to get user input from the terminal and store it in the
           variable userName [String userName = System.console().readLine();]

        3) Next print the userName to the console, saying: "Hello, [userName here]!"

        4) Next print "There are ___ people in front of you." using the number for how many
           people are ahead of them (how many items already in the array)

        5) Then, add the customer's name to the given customers list. And print the list.

        6) No need to return anything.

    Re-cap of ArrayList Syntax: myArray.add("Heidi"); => to add an item to an ArrayList


How to Test: Test Early and Test Often:
Write and test each method one at a time. A good strategy for developing software is to code only
a little and test. As they say, "Test early and test often." Go ahead and use the following code
in your TestJava file to test your methods by uncommenting the methods you are testing.
Test one at a time.

NOTES:
    • //single line comments// and /*multi-line comments*/

    • The output does not need to be formatted exactly the same as the given examples, as long as
    all the information is provided.

NINJA BONUSES:
5. void printPriceChart(String product, double price, int maxQuantity)-
    Given a priduct, price, and a maxQuantity, create a method that prints the cost for buying 1,
    then the price for buying 2, then 3... and so on, up to the max.

    EX: If the product is "Columbian Coffee Grounds", $15.0, 3
        => Columbian Coffee Grounds
           1 - $15.00
           2 - $30.00
           3 - $45.00
    TIP: You can use the escape character \n within your string for line breaks

        SENSEI BONUS:
        Format the prices as currency. (hint: https://docs.oracle.com/javase/tutorial/java/data/numberformat.html)

            SENPAI BONUS:
            Take $0.50 more off the original price every time the quantity increases.

            EX: Given a $2.00 price and 4 max, where the prices would normally be $2, $4, $6, $8;
            the discount would yield $2, $3.50, $5, $6.50 (progressively taking off $0.50, $1, $1.50, etc)
                => 1 - $2.00
                   2 - $3.50
                   3 - $5.00
                   4 - $6.50

6. boolean displayMenu(ArrayList<String>menuItems, ArrayList<Double>prices)-
    Let's overload the display menu! Given 2 arrays, an ArrayList of menu items(strings) and an ArrayList
    of prices(doubles) print a menu!

    However, first check: If the arrays are not the same size, immediately return false.

    To print the menu, iterate from 0 to the last index. Each time through, print on the same line:
        a) the index
        b) the menu item at that index
        c) the price at that index
        Finally, return true
            => 0 drip coffee -- $1.50
               1 cappuccino -- $3.50
               2 latte -- $4.50
               3 mocha -- $3.50

SENSEI BONUS:
Make a method addCustomers where a barista can enter multiple customers.
HINT: You can use a while loop and ask the user to type "q" when they are finished entering names.


Check List:
    • Create a CafeUtil class and a testing file
    • Implement the getStreakGoal method and test
    • Implement the getOrderTotal method and test
    • Implement the displayMenu method and test
    • Implement the addCustomer method and test

NINJA BONUS:
    • Implement the printPriceChart method
    • Overload the displayMenu method

SENSEI BONUS:
    • Implement the addCustomers method